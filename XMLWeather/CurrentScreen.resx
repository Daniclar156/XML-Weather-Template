<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>